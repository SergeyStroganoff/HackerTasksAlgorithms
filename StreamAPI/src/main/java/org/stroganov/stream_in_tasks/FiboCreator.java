package org.stroganov.stream_in_tasks;

import java.util.stream.Stream;

/**
 * Начальные элементы: Мы начинаем с массива {0, 1}, который хранит два последних числа Фибоначчи (начальные значения).
 * Шаг итерации: Для каждого шага в потоке создаем новый массив, в котором первый элемент — это текущее число Фибоначчи, а второй элемент — это сумма предыдущих двух чисел.
 * Ограничение потока: С помощью limit(10) ограничиваем количество чисел, которые хотим получить.
 * Извлечение чисел: Для каждого элемента потока мы получаем первое число массива f[0], которое и является числом Фибоначчи.
 */

public class FiboCreator {

    public static void main(String[] args) {
        //f - массив, где f[0] - текущее число Фибоначчи, f[1] - сумма предыдущих двух чисел
        Stream.iterate(new int[]{0, 1}, f -> new int[]{f[1], f[0] + f[1]})
                .limit(20)
                .map(f -> f[0])
                .forEach(System.out::println);
    }
}
